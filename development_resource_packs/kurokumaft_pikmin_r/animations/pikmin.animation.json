{
	"format_version": "1.20.10",
	"animations": {
		"animation.pikmin.move": {
			"loop": true,
			"bones": {
				"leftArm": {
					"rotation": ["variable.tcos0", 0, 0]
				},
				"leftLeg": {
					"rotation": ["variable.tcos0 * -1.4", 0, 0]
				},
				"rightArm": {
					"rotation": ["-variable.tcos0", 0, 0]
				},
				"rightLeg": {
					"rotation": ["variable.tcos0 * 1.4", 0, 0]
				}
			}
		},
		"animation.pikmin.swimming": {
			"animation_length": 1.3,
			"loop": true,
			"bones": {
				"leftarm": {
					"rotation": {
						"0.7": {
							"post": [
								"math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)",
								"math.lerp(this, 180.0, variable.leftarmswim_amount)",
								"math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"
							],
							"pre": [
								"math.lerp(this, 0.0, variable.leftarmswim_amount)",
								"math.lerp(this, 180.0, variable.leftarmswim_amount)",
								"math.lerp(this, 180.0 - 0.01877 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.leftarmswim_amount)"
							]
						},
						"1.1": [
							"math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)",
							"math.lerp(this, 180.0, variable.leftarmswim_amount)",
							"math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"
						],
						"1.3": {
							"post": [
								"math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.leftarmswim_amount)",
								"math.lerp(this, 180.0, variable.leftarmswim_amount)",
								"math.lerp(this, 180.0, variable.leftarmswim_amount)"
							],
							"pre": [
								"math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)",
								"math.lerp(this, 180.0, variable.leftarmswim_amount)",
								"math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"
							]
						}
					}
				},
				"leftleg": {
					"rotation": ["math.lerp(this, math.cos(query.modified_distance_moved * 19.5 + 180.0) * 17.2, variable.leftarmswim_amount) - this", 0, 0]
				},
				"rightarm": {
					"rotation": {
						"0.7": {
							"post": [
								"math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)",
								"math.lerp(this, 180.0, variable.rightarmswim_amount)",
								"math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"
							],
							"pre": [
								"math.lerp(this, 0.0, variable.rightarmswim_amount)",
								"math.lerp(this, 180.0, variable.rightarmswim_amount)",
								"math.lerp(this, -0.1019 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.rightarmswim_amount)"
							]
						},
						"1.1": [
							"math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)",
							"math.lerp(this, 180.0, variable.rightarmswim_amount)",
							"math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"
						],
						"1.3": {
							"post": [
								"math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.rightarmswim_amount)",
								"math.lerp(this, 180.0, variable.rightarmswim_amount)",
								"math.lerp(this, 180.0, variable.rightarmswim_amount)"
							],
							"pre": [
								"math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)",
								"math.lerp(this, 180.0, variable.rightarmswim_amount)",
								"math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"
							]
						}
					}
				},
				"rightleg": {
					"rotation": ["math.lerp(this, math.cos(query.modified_distance_moved * 19.5) * 17.2, variable.leftarmswim_amount) - this", 0, 0]
				}
			}
		},
		"animation.pikmin.fly": {
			"loop": true,
			"animation_length": 0.08333,
			"bones": {
				"body": {
					"rotation": [62.5, 0, 0],
					"position": [0, -10.6, -15.2]
				},
				"rightArm": {
					"rotation": [-65, 0, 0],
					"position": [-2.4, -9.3, 15.1]
				},
				"leftArm": {
					"rotation": [-65, 0, 0],
					"position": [2, -9.5, 14.9]
				},
				"rightLeg": {
					"rotation": [82.5, 0, 0],
					"position": [0, -8, -6]
				},
				"leftLeg": {
					"rotation": [82.5, 0, 0],
					"position": [0, -8, -6]
				},
				"rightfeather": {
					"rotation": {
						"0.0": [66.59588, -41.07962, -44.63895],
						"0.0417": [42.62077, -23.5569, -17.84935]
					},
					"position": {
						"0.0": [-0.4, 0.7, 1.6],
						"0.0417": [0.2, 0.6, 1.6]
					}
				},
				"leftfeather": {
					"rotation": {
						"0.0": [58.58519, 38.44853, 47.30232],
						"0.0417": [35.38491, 21.86643, 5.56581]
					},
					"position": {
						"0.0": [-0.4, -0.1, 0.1],
						"0.0417": [-0.2, 0.1, 0.8]
					}
				}
			}
		},
		"animation.pikmin.plant": {
			"loop": true,
			"bones": {
				"waist": {
					"rotation": [0, 0, 0],
					"position": [0, -12, 0]
				}
			}
		},
		"animation.pikmin.wield_first_person": {
			"loop": true,
			"bones": {
				"pole": {
					"rotation": [152, -9, 25],
					"position": [-3, -2, 7]
				}
			}
		},
		"animation.pikmin.wield_first_person_raise": {
			"loop": true,
			"bones": {
				"pole": {
					"rotation": [30, -20, -65],
					"position": [
						"6.0 + (variable.charge_amount <= 0.25 ? math.lerp(0.0, -6.5, variable.charge_amount * 4.0) : -6.5) + (variable.charge_amount > 0.25 ? math.lerp(0.0, -4.0, (variable.charge_amount - 0.25) * 1.33) : 0.0)",
						"-3.0 + (variable.charge_amount <= 0.25 ? math.lerp(0.0, -3.0, variable.charge_amount * 4.0) : -3.0) + (variable.charge_amount > 0.25 ? math.lerp(0.0, 3.0, (variable.charge_amount - 0.25) * 1.33) : 0.0)",
						"8.0 + (variable.charge_amount <= 0.25 ? math.lerp(0.0, -16.5, variable.charge_amount * 4.0) : -16.5) + (variable.charge_amount > 0.25 ? math.lerp(0.0, 0.0, (variable.charge_amount - 0.25) * 1.33) : 0.0)"
					]
				}
			}
		},
		"animation.pikmin.wield_first_person_raise_shake": {
			"loop": true,
			"bones": {
				"pole": {
					"rotation": [0, 0, 0],
					"position": [0, "variable.charge_amount >= 1.0 ? math.sin(q.life_time * 1000.0 * 1.3) * 0.1 - math.sin(q.life_time * 45.0) * 0.5 : 0.0", 0]
				}
			}
		},
		"animation.pikmin.wield_first_person_riptide": {
			"loop": true,
			"override_previous_animation": true,
			"bones": {
				"pole": {
					"rotation": [180, 60, -36],
					"position": [-2, -7, -10]
				}
			}
		},
		"animation.pikmin.wield_third_person": {
			"loop": true,
			"bones": {
				"pole": {
					"rotation": [97, -1.5, -49],
					"position": [-0.5, 6.5, -6.5]
				}
			}
		},
		"animation.pikmin.wield_third_person_raise": {
			"loop": true,
			"bones": {
				"pole": {
					"rotation": [-7, 180, -40],
					"position": [-1.7, 1, 2.5]
				}
			}
		},
		"animation.pikmin.throw": {
			"loop": true,
			"bones": {
				"waist": {
					"rotation": ["90 - query.target_x_rotation", "-query.target_y_rotation", 0],
					"position": [0, -24, 0]
				}
			}
		}
	}
}